{"version":3,"sources":["webpack:///./src/app/post/post.module.ts","webpack:///./src/app/post/post.page.html","webpack:///./src/app/post/post.page.scss","webpack:///./src/app/post/post.page.ts"],"names":[],"mappings":"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","file":"post-post-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostPage } from './post.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PostPage]\n})\nexport class PostPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBack()\\\">\\n        <ion-icon name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Post</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card *ngIf=\\\"post != null\\\">\\n    <ion-card-content>\\n      <p>\\n        {{ post.text }}\\n      </p>\\n      <small>\\n        By {{ post.name }}\\n      </small>\\n    </ion-card-content>\\n    <ion-row padding>\\n      <ion-col>\\n        <div *ngIf=\\\"!likeCheck(post.likes) && post\\\" (click)=\\\"likePost(post._id)\\\">\\n          <ion-icon name='thumbs-up'></ion-icon>\\n          {{ post.length }} Like\\n        </div>\\n        <div *ngIf=\\\"likeCheck(post.likes) && post\\\" (click)=\\\"unlikePost(post._id)\\\">\\n          <ion-icon name='thumbs-up' color=\\\"primary\\\"></ion-icon>\\n          {{ post.likes.length }} Like\\n        </div>\\n      </ion-col>\\n      <ion-col text-center>\\n        <div (click)=\\\"commentPost(post._id)\\\" *ngIf=\\\"posts\\\">\\n          <ion-icon name=\\\"quote\\\" color=\\\"primary\\\"></ion-icon>\\n          {{ post.comments.length }} Comment\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card>\\n\\n  <ion-card *ngIf=\\\"post.comments.length\\\">\\n    <ion-item *ngFor=\\\"let comment of post.comments; let i = index\\\">\\n      <ion-avatar>\\n        <img src=\\\"{{comment.userImage}}\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <small>{{ comment.name.split(' ')[0] }}</small>\\n        <p>{{ comment.text }}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-card>\\n\\n</ion-content>\\n<ion-footer padding>\\n  <!--Comments-->\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">\\n      <ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\n      Share your views on this...\\n    </ion-label>\\n    <ion-textarea name=\\\"text\\\" rows=\\\"1\\\" [(ngModel)]=\\\"text\\\"></ion-textarea>\\n  </ion-item>\\n  <br>\\n  <ion-button expand=\\\"block\\\" fill=\\\"solid\\\" size=\\\"small\\\" (click)=\\\"addComment()\\\">\\n    <ion-icon name=\\\"send\\\"></ion-icon> Comment\\n  </ion-button>\\n\\n  <!--Comments-->\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NetworkProvider } from '../services/network.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.page.html',\n  styleUrls: ['./post.page.scss'],\n})\nexport class PostPage implements OnInit {\n\n\n  id: string;\n  post = null;\n  text = \"\";\n\n  constructor(\n    private route: ActivatedRoute,\n    private util: NetworkProvider,\n    private router: Router\n  ) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.loadPost();\n  }\n\n  ngOnInit() {\n  }\n\n  // Check for empty object\n  isNotEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key))\n        return true;\n    }\n    return false;\n  }\n\n  // Fetch the post from the server\n  loadPost() {\n    this.util.getAuthData(`posts/${this.id}`).subscribe((res: any) => {\n      console.log(res);\n      this.post = res;\n    });\n  }\n\n  //like Post\n  likePost(id) {\n    this.util.postAuthData(`posts/like/${id}`, {})\n      .subscribe((res: any) => {\n        this.post = res;\n      });\n  }\n\n  //unlike Post\n  unlikePost(id) {\n    this.util.postAuthData(`posts/unlike/${id}`, {})\n      .subscribe((res: any) => {\n        this.post = res;\n      })\n  }\n\n  // check if the like is in the likes array of the post\n  likeCheck(likes) {\n    let user_id = this.util.authUser();\n    return likes.some((el) => {\n      return el.user.toString() === user_id\n    });\n  }\n\n  //comment Post\n  addComment() {\n    if (this.text != \"\") {\n      this.util.postAuthData(`posts/comment/${this.id}`, { text: this.text })\n        .subscribe((res: any) => {\n          this.post = res;\n          this.text = \"\";\n        });\n    } else {\n      this.util.toastPresent('Cannot add blank comment.', 'danger');\n    }\n  }\n\n  goBack() {\n    this.router.navigate(['/feed']);\n  }\n\n}\n"],"sourceRoot":""}